@using BulletinBoard.Model
@using BulletinBoard.Pages.Violation
@using GEmojiSharp.Blazor
@using static Services.GlobalService


<MudCard Outlined="true" Class="mb-3">
<MudCardHeader>
    <CardHeaderAvatar>
        <MudAvatar Image="@(_globalService.AvatarImage(Comment.User!.Image))" />
    </CardHeaderAvatar>
    <CardHeaderContent>
        <MudText Typo="Typo.body1">@Comment.User!.UserName</MudText>
        <MudText Typo="Typo.subtitle2"><strong>Posted:</strong> @(((DateTime)Comment.Created).ToString("dd.MM.yyyy HH:mm")) </MudText>
    </CardHeaderContent>
    <CardHeaderActions>
        <MudMenu Icon="@Icons.Material.Filled.Settings" Color="Color.Default" AnchorOrigin="Origin.CenterLeft" TransformOrigin="Origin.TopRight">
            
            <MudMenuItem OnClick="@(() => Report(Comment))"><MudIcon Icon="@Icons.Filled.Report" Color="Color.Error" Style="vertical-align:middle;" Title="Edit" Class="mr-2"/><span style="vertical-align:middle;">Report</span></MudMenuItem>
             @if (_userService.IsBoardModerator(new Board() {Guid = BoardId}) || (_userService.User != null && Comment.UserId==_userService.User.Id) )
             {
                 <MudMenuItem OnClick="@(async ()=> await CommentRemoveCallback.InvokeAsync(Comment))"><MudIcon Icon="@Icons.Filled.Delete" Style="vertical-align:middle;" Title="Delete" Class="mr-2"/><span style="vertical-align:middle;">Delete</span></MudMenuItem>
             }
        </MudMenu>
    </CardHeaderActions>
</MudCardHeader>
<MudCardContent Class="pt-0">
    <MudText Typo="Typo.body1" Class="mt-2" Style="overflow-wrap: break-word;">
        <Emoji>@Comment.Text</Emoji>
    </MudText>
</MudCardContent>
</MudCard>

@code {
    [Parameter]
    public Comment Comment { get; set; } = default!;

    [Parameter]
    public Guid BoardId { get; set; } = default!;
    [Parameter]
    public EventCallback<Comment> CommentRemoveCallback { get; set; }
    private void Report(Comment comment)
    {
        var parameters = new DialogParameters {{"Comment", comment}};
        _dialogService.Show<ViolationDialogComponent>($"Report comment",parameters, new DialogOptions() {CloseButton = true, MaxWidth = MaxWidth.Large});
    }
}
